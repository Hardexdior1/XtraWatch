.seller{
    color:#75757a;
}

.watchAndNameCarrier{
    display: flex;
    gap: 4;
    align-items: center;
    /* margin-top: 0; */
    /* border-bottom:1px solid grey  ; */
    /* margin-bottom: 0px; */
    
    /* padding: 200px 0px; */
}
.watchAndNameCarrier img{
    width: 100px;
    height: 90px;
    object-fit: cover;
}

.name{
    margin-bottom: 0;
}
.cartWrap{
   border-radius: 10px;
   /* box-shadow: 0px 7px 10px rgb(255, 255, 255); */
   box-shadow: 0px 5px 15px rgb(117, 116, 116);

   /* box-shadow: 3px 3px 4px grey; */
   color: #75757a;
    background-color: white;
}

.line1{
    height: 1px;
    background-color: gray;
    margin-top: 10px;
}

.itemSectionPadding{
    padding: 10px 20px ;

}
.flexSeller{
    display: flex;
    align-items: center;
    gap: 2;
    margin-top: 3px;
}
.flexSeller p{
    margin-top: 0;
}
.price{
    margin-bottom: 0;
    color: green;
}

.del{
    color: grey;
    font-weight: 200;
    font-size: 20px;
    margin-top: 0;
    color: rgb(243, 71, 71);
}

.flexPriceAndImage{
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.remove1{
    /* color: red; */
    font-weight: bold;
    display: flex;
    gap: 4px;
    align-items: center;
    cursor: pointer;
    transition: 0.3s;
}
.remove1:hover{
    color: #880a0a;
}

.btnCarrier{
    display: flex;
    align-items: center;
    gap: 6px;
    font-weight: bold;
    color: black;
}
 .btnCarrier button{
    font-weight: bolder;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    border:none;
    box-shadow: 3px 2px 2px grey;

 }

 .flexRemove{
    display: flex;
    align-items: center;
    justify-content: space-between;
 }

 @media (max-width:600px) {
    .cartWrapper{
        margin:5% 4%;
    }
    .flexPriceAndImage{
        flex-direction: row-reverse;
    }
}


.totalFlex{
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.summary{
    text-align: left;
    box-shadow: 0px 5px 15px rgb(117, 116, 116);
    padding: 5%;
    height: fit-content;
    border-radius: 5px;
}
.summary button{
    width: 100%;
    padding: 10px 0px;
    border-radius: 5px;
    border: 1px solid grey;
    margin-top: 10px;
}

.cartWrapper{
    margin: 3% 5%;
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 12px;
    

}

@media (max-width:700px) {
    .cartWrapper{
        grid-template-columns: 1fr;
        gap: 20px;
    }
}

.text{
    margin: 30px;
}







/* 


import React, { useEffect, useState } from "react";
// import "../Styles/Section4.css";
import "../Styles/Style.css";
import { FaDeleteLeft } from "react-icons/fa6";
import { FaRemoveFormat } from "react-icons/fa";
import { FcDeleteRow } from "react-icons/fc";
import { MdDelete } from "react-icons/md";
import { GiPriceTag } from "react-icons/gi";
import { Link } from "react-router-dom";
const Cart = ({
  cart,
  cartTotal,
  removeFromCart,
  clear,
  incrementQuantity,
  // decrementQuantity,
}) => {
  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  const formatter = new Intl.NumberFormat("en-US", {
    style: "currency",
    currency: "USD",
  });
  const formattedPrice = formatter.format(cartTotal);
  return (
    <div>
      <center className="margin">
        {cart.length > 0 ? (
          <b>
            {cart.length < 2 ? (
              <b>{cart.length} product in your cart </b>
            ) : (
              <b>{cart.length} products in your cart </b>
            )}{" "}
          </b>
        ) : (
          <b>no products in your cart</b>
        )}
      </center>

      {cart.length > 0 ? (
        <div className="cartWrapper">
          <div className="cartWrap">
            {cart.map((eachItem) => {
              const {
                name,
                price,
                normalPrice,
                img,
                sale,
                increaseCart,
                quantity,
              } = eachItem;

              return (
                <div key={eachItem.id}>
                  <div className="itemSectionPadding">
                    <div>
                      <div className="flexPriceAndImage">
                        <div className="watchAndNameCarrier">
                          <div>
                            <img src={img} alt="product-img" />
                          </div>

                          <div>
                            <h4 className="name">{name}</h4>
                            <div className="flexSeller">
                              <p className="seller">seller: </p>
                              <p>xtrawatch</p>
                            </div>
                          </div>
                        </div>

                        <div>
                          <h2 className="price"> ${price}</h2>
                          <h4 className="del">
                            <del>{normalPrice} </del>
                          </h4>
                        </div>
                      </div>

                      <div className="flexRemove">
                        <div
                          className="remove1"
                          onClick={() => {
                            removeFromCart(eachItem);
                          }}>
                          <MdDelete />
                          <p>
                            <b>Remove</b>
                          </p>
                        </div>

                        <div className="btnCarrier">
                          <button
                            onClick={() => {
                              // decrementQuantity(eachItem);
                            }}>
                            -
                          </button>
                          <p>{quantity}</p>
                          <button
                            onClick={() => {
                              incrementQuantity(eachItem);
                            }}>
                            +
                          </button>
                        </div>
                      </div>
                    </div>
                    <div className="line1"></div>
                  </div>
                </div>
              );
            })}
          </div>

          <div className="summary">
            <h3>CART SUMMARY</h3>

            <div className="totalFlex">
              <h4>Subtotal </h4>
              <h3>{formattedPrice}</h3>
            </div>
            <Link to="/Checkout">
              {" "}
              <button>
                CHECKOUT {"("} {formattedPrice} {")"}
              </button>
            </Link>
          </div>
        </div>
      ) : (
        <Link to="/WatchPage">
          <button>continue shopping</button>
        </Link>
      )}
    </div>
  );
};

export default Cart; */
